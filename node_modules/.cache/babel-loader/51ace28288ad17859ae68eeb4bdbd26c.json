{"ast":null,"code":"var _jsxFileName = \"/Users/akseluhr/minhemsida/src/views/projectsView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ProjectCard from '../components/ProjectCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hej = \"Some quick example text to build on the card title and make up the bulk of the card's content.\"; // readme: https://raw.githubusercontent.com/akseluhr/binary-classifications/main/README.md\n// starred: https://api.github.com/users/akseluhr/starred\n\nconst ProjectsView = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [descript, setDescription] = useState('');\n  const [path, setUrl] = useState('');\n  const [planguage, setLanguage] = useState('');\n  const [err, setErr] = useState('');\n  useEffect(() => {\n    fetch('https://api.github.com/users/akseluhr/starred').then(res => res.json()).then(data => {\n      console.log(data);\n      setData(data[0]);\n      setData(data[1]);\n      setData(data[2]);\n      setData(data[3]);\n    });\n  }, []);\n\n  const setData = _ref => {\n    let {\n      name,\n      description,\n      url,\n      language\n    } = _ref;\n    setTitle(name);\n    setDescription(description);\n    setUrl(url);\n    setLanguage(language);\n    console.log(name, description);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projectView\",\n    children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n      title: \"Hej\",\n      text: hej\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      text: hej\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      text: hej\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      text: hej\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectsView, \"/btpSba1qbtiJHlAWK8jOw0CGK0=\");\n\n_c = ProjectsView;\nexport default ProjectsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsView\");","map":{"version":3,"sources":["/Users/akseluhr/minhemsida/src/views/projectsView.js"],"names":["React","useEffect","useState","ProjectCard","hej","ProjectsView","title","setTitle","descript","setDescription","path","setUrl","planguage","setLanguage","err","setErr","fetch","then","res","json","data","console","log","setData","name","description","url","language"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,GAAG,GAAG,gGAAZ,C,CAEA;AACA;;AAKA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,cAAX,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACQ,IAAD,EAAOC,MAAP,IAAiBT,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACU,SAAD,EAAYC,WAAZ,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACY,GAAD,EAAMC,MAAN,IAAgBb,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,KAAK,CAAC,+CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAG,MAAAA,OAAO,CAACH,IAAI,CAAC,CAAD,CAAL,CAAP;AACAG,MAAAA,OAAO,CAACH,IAAI,CAAC,CAAD,CAAL,CAAP;AACAG,MAAAA,OAAO,CAACH,IAAI,CAAC,CAAD,CAAL,CAAP;AACAG,MAAAA,OAAO,CAACH,IAAI,CAAC,CAAD,CAAL,CAAP;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMG,OAAO,GAAG,QAKV;AAAA,QALW;AACbC,MAAAA,IADa;AAEbC,MAAAA,WAFa;AAGbC,MAAAA,GAHa;AAIbC,MAAAA;AAJa,KAKX;AACFpB,IAAAA,QAAQ,CAACiB,IAAD,CAAR;AACAf,IAAAA,cAAc,CAACgB,WAAD,CAAd;AACAd,IAAAA,MAAM,CAACe,GAAD,CAAN;AACAb,IAAAA,WAAW,CAACc,QAAD,CAAX;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ,EAAkBC,WAAlB;AACH,GAXD;;AAeA,sBAEI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAC,KAAnB;AAAyB,MAAA,IAAI,EAAErB;AAA/B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,WAAD;AAAa,MAAA,IAAI,EAAEA;AAAnB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAcH,CAhDD;;GAAMC,Y;;KAAAA,Y;AAmDN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ProjectCard from '../components/ProjectCard'; \n\nconst hej = \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n\n// readme: https://raw.githubusercontent.com/akseluhr/binary-classifications/main/README.md\n// starred: https://api.github.com/users/akseluhr/starred\n\n\n\n\nconst ProjectsView = () => {\n    const [title, setTitle] = useState('')\n    const [descript, setDescription] = useState('')\n    const [path, setUrl] = useState('')\n    const [planguage, setLanguage] = useState('')\n    const [err, setErr] = useState('')\n\n    useEffect(() => {\n        fetch('https://api.github.com/users/akseluhr/starred')\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n                setData(data[0])\n                setData(data[1])\n                setData(data[2])\n                setData(data[3])\n            });\n    }, []); \n\n    const setData = ({\n        name,\n        description,\n        url,\n        language\n    }) => {\n        setTitle(name);\n        setDescription(description);\n        setUrl(url);\n        setLanguage(language);\n        console.log(name, description);\n    }\n\n\n\n    return (\n\n        <div className=\"projectView\">\n            <ProjectCard title=\"Hej\" text={hej}/>\n            <ProjectCard text={hej}/>\n            <ProjectCard text={hej}/>\n            <ProjectCard text={hej}/>\n\n            \n        </div>\n\n\n    );\n\n}\n\n\nexport default ProjectsView\n"]},"metadata":{},"sourceType":"module"}