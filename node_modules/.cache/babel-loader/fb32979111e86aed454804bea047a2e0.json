{"ast":null,"code":"var _jsxFileName = \"/Users/akseluhr/minhemsida/src/views/projectsView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ProjectCard from '../components/ProjectCard';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Loader from '../components/Loader.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst hej = \"Some quick example text to build on the card title and make up the bulk of the card's content.\"; // readme: https://raw.githubusercontent.com/akseluhr/binary-classifications/main/README.md\n// starred: https://api.github.com/users/akseluhr/starred\n\nconst projectNames = [];\nconst projectDescriptions = [];\nconst projectPaths = [];\nconst projectLanguages = [];\n\nconst ProjectsView = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [descript, setDescription] = useState('');\n  const [path, setUrl] = useState('');\n  const [planguage, setLanguage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [err, setErr] = useState('');\n  useEffect(() => {\n    setIsLoading(true);\n    fetch('https://api.github.com/users/akseluhr/starred').then(res => res.json()).then(data => {\n      setData(data[0]);\n      setData(data[1]);\n      setData(data[2]);\n      setData(data[3]);\n      setData(data[3]);\n    }).catch(err);\n  }, []);\n\n  const setData = _ref => {\n    let {\n      name,\n      description,\n      html_url,\n      language\n    } = _ref;\n    setTitle(name);\n    setDescription(description);\n    setUrl(html_url);\n    setLanguage(language);\n    setIsLoading(false);\n    pushData({\n      name,\n      description,\n      html_url,\n      language\n    });\n  };\n\n  const pushData = _ref2 => {\n    let {\n      n,\n      d,\n      hu,\n      l\n    } = _ref2;\n    projectNames.push(n);\n    projectDescriptions.push(d);\n    projectPaths.push(hu);\n    projectLanguages.push(l);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Carousel, {\n    variant: \"dark\",\n    children: [/*#__PURE__*/_jsxDEV(Carousel.Item, {\n      interval: 20000,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectCards\",\n        children: [!isLoading ? /*#__PURE__*/_jsxDEV(ProjectCard, {\n          title: projectNames[0],\n          language: \"Language: \" + projectLanguages[0],\n          text: projectDescriptions[0],\n          href: projectPaths[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(ProjectCard, {\n          text: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 196\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 177\n        }, this), !isLoading ? /*#__PURE__*/_jsxDEV(ProjectCard, {\n          title: projectNames[1],\n          language: \"Language: \" + projectLanguages[1],\n          text: projectDescriptions[1],\n          href: projectPaths[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(ProjectCard, {\n          text: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 196\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 177\n        }, this), !isLoading ? /*#__PURE__*/_jsxDEV(ProjectCard, {\n          title: projectNames[2],\n          language: \"Language: \" + projectLanguages[2],\n          text: projectDescriptions[2],\n          href: projectPaths[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(ProjectCard, {\n          text: /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 196\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 177\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Carousel.Item, {\n      interval: 20000,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projectCards\",\n        children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n          title: projectNames[3],\n          language: \"Language: \" + projectLanguages[3],\n          text: projectDescriptions[3],\n          href: projectPaths[3]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n          title: projectNames[4],\n          language: \"Language: \" + projectLanguages[4],\n          text: projectDescriptions[4],\n          href: projectPaths[4]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n          title: projectNames[5],\n          language: \"Language: \" + projectLanguages[5],\n          text: projectDescriptions[5],\n          href: projectPaths[5]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectsView, \"7lPHTwUfiE34GWuATBhT+Avkc0Y=\");\n\n_c = ProjectsView;\nexport default ProjectsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectsView\");","map":{"version":3,"sources":["/Users/akseluhr/minhemsida/src/views/projectsView.js"],"names":["React","useEffect","useState","ProjectCard","Carousel","Loader","hej","projectNames","projectDescriptions","projectPaths","projectLanguages","ProjectsView","title","setTitle","descript","setDescription","path","setUrl","planguage","setLanguage","isLoading","setIsLoading","err","setErr","fetch","then","res","json","data","setData","catch","name","description","html_url","language","pushData","n","d","hu","l","push"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport ProjectCard from '../components/ProjectCard';\nimport Carousel from 'react-bootstrap/Carousel'\nimport Loader from '../components/Loader.js'\n\nconst hej = \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n\n// readme: https://raw.githubusercontent.com/akseluhr/binary-classifications/main/README.md\n// starred: https://api.github.com/users/akseluhr/starred\n\nconst projectNames = [];\nconst projectDescriptions = [];\nconst projectPaths = [];\nconst projectLanguages = [];\n\n\nconst ProjectsView = () => {\n    const [title, setTitle] = useState('')\n    const [descript, setDescription] = useState('')\n    const [path, setUrl] = useState('')\n    const [planguage, setLanguage] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n    const [err, setErr] = useState('')\n\n    useEffect(() => {\n        setIsLoading(true);\n        fetch('https://api.github.com/users/akseluhr/starred')\n            .then(res => res.json())\n            .then(data => {\n\n                setData(data[0])\n                setData(data[1])\n                setData(data[2])\n                setData(data[3])\n                setData(data[3])\n            })\n            .catch(err);\n    }, []);\n\n    const setData = ({\n        name,\n        description,\n        html_url,\n        language\n    }) => {\n\n        setTitle(name);\n        setDescription(description);\n        setUrl(html_url);\n        setLanguage(language);\n\n        setIsLoading(false);\n        pushData({name, description, html_url, language})\n\n    };\n    const pushData = ({n, d, hu, l}) => {\n        projectNames.push(n)\n        projectDescriptions.push(d)\n        projectPaths.push(hu)\n        projectLanguages.push(l)\n    }\n\n\n    return (\n   \n        <Carousel variant='dark'>\n            <Carousel.Item interval={20000}>\n                <div className=\"projectCards\">\n                \n                    {!isLoading ? (<ProjectCard title={projectNames[0]} language={\"Language: \" +projectLanguages[0]} text={projectDescriptions[0]} href={projectPaths[0]} />) : <ProjectCard text={<Loader/>} />}\n                    {!isLoading ? (<ProjectCard title={projectNames[1]} language={\"Language: \" +projectLanguages[1]} text={projectDescriptions[1]} href={projectPaths[1]} />) : <ProjectCard text={<Loader/>} />}\n                    {!isLoading ? (<ProjectCard title={projectNames[2]} language={\"Language: \" +projectLanguages[2]} text={projectDescriptions[2]} href={projectPaths[2]} />) : <ProjectCard text={<Loader/>} />}\n\n                </div>\n            </Carousel.Item>\n            <Carousel.Item interval={20000}>\n                <div className=\"projectCards\">\n\n                    <ProjectCard title={projectNames[3]} language={\"Language: \" + projectLanguages[3]} text={projectDescriptions[3]} href={projectPaths[3]} />\n                    <ProjectCard title={projectNames[4]} language={\"Language: \" + projectLanguages[4]} text={projectDescriptions[4]} href={projectPaths[4]} />\n                    <ProjectCard title={projectNames[5]} language={\"Language: \" + projectLanguages[5]} text={projectDescriptions[5]} href={projectPaths[5]} />\n\n                </div>\n            </Carousel.Item>\n        </Carousel>\n\n\n\n    );\n\n}\n\n\nexport default ProjectsView\n"]},"metadata":{},"sourceType":"module"}